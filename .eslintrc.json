{
  "root": true,
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["./tsconfig.json", "./extension/tsconfig.json"],
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:prettier/recommended",
    "plugin:jest/recommended"
  ],
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "jsx-a11y",
    "import",
    "jest"
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "react/prop-types": "off",
    "no-console": "warn",
    "no-debugger": "error",
    "no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "no-empty-function": "error",
    "no-magic-numbers": ["warn", { "ignore": [0, 1, -1], "ignoreArrayIndexes": true, "enforceConst": true, "detectObjects": false }],
    "eqeqeq": ["error", "always"],
    "curly": "error",
    "semi": ["error", "always"],
    "quotes": ["error", "single", { "allowTemplateLiterals": true }],
    "react/jsx-boolean-value": ["error", "always"],
    "react/jsx-no-useless-fragment": "error",
    "react/self-closing-comp": "error",
    "react/no-array-index-key": "warn",
    "import/no-unresolved": "error",
    "import/no-extraneous-dependencies": "error",
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@typescript-eslint/explicit-module-boundary-types": "warn",
    "@typescript-eslint/no-inferrable-types": "warn"
  },
  "ignorePatterns": [
    "dist/",
    "build/",
    "node_modules/",
    "extension/dist/",
    "*.config.js",
    "*.config.ts",
    "*.cjs"
  ]
}